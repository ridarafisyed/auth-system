{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","className","class","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","style","width","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","redirect","setRedirect","logout_user","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","code","children","useEffect","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341b1c8e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h1 class='display-4 mt-3'>Welcome to Dextera!</h1>\n            <p class='lead'>The Law firm!</p>\n            <hr class='my-4' />\n            \n            <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n        </div>\n    </div>\n);\n\nexport default Home;\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';\n","import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    LOGOUT\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }; \n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const signup = (email, first_name, last_name,  password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({email, first_name, last_name,  password, re_password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\n\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '' \n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container d-flex justify-content-center mt-5'>\n            <div className=\"card p-3 text-center\" style={{width:\"25rem\"}}>\n            <h3>Sign In</h3>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\n            </form>\n            \n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\n            </p>\n        </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\n\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        email: '',\n        first_name: '',\n        last_name: '',\n        password: '',\n        re_password: ''\n    });\n\n    const { email, first_name, last_name, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(email, first_name, last_name, password, re_password);\n            setAccountCreated(true);\n            \n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className='container d-flex justify-content-center mt-4'>\n            <div className=\"card p-3 text-center\" style={{width:\"25rem\"}}>\n            <h3>Sign Up</h3>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='text'\n                        placeholder='First Name*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='text'\n                        placeholder='Last Name*'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control mt-3'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Register</button>\n            </form>\n            \n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div></div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\n","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case LOGIN_FAIL:\n        case SIGNUP_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\n// logo import \n\n\nconst Navbar = ({ logout, isAuthenticated }) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logout_user = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const guestLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>Login</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <li className='nav-item'>\n            <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\n        </li>\n    );\n\n    return (\n        <Fragment>\n            \n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n               <div className=\"container\"> <Link className='navbar-brand' to='/'>Dextera</Link>\n                    <button \n                        className='navbar-toggler' \n                        type='button' \n                        data-toggle='collapse' \n                        data-target='#navbarNav' \n                        aria-controls='navbarNav' \n                        aria-expanded='false' \n                        aria-label='Toggle navigation'\n                    >\n                        <span className='navbar-toggler-icon'></span>\n                    </button>\n                    <div className='collapse navbar-collapse' id='navbarNav'>\n                        <ul className='navbar-nav'>\n                            <li className='nav-item active'>\n                                <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\n                            </li>\n                            {isAuthenticated ? authLinks() : guestLinks()}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n            \n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div className=\"main \">\n            <Navbar />\n            <div className=\"container\">\n                {children}\n            </div>\n            \n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\n\nconst App = () => (\n    <Provider store={store} >\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}