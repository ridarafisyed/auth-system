{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL } from './types';\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/supersis03/Projects/auth_system/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","load_user","dispatch","localStorage","getItem","config","headers","res","get","process","env","REACT_APP_API_URL","type","payload","data","err","login","email","password","body","JSON","stringify","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,aADJ,EAEIC,UAFJ,EAGIC,mBAHJ,EAIIC,gBAJJ,QAKO,SALP;AAOA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,MAAIC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAJ,EAAmC;AAC/B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAC;AACJ,wBAAgB,kBADZ;AAEJ,yBAAiB,OAAMH,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAFlD;AAGJ,kBAAU;AAHN;AADG,KAAf;;AAOA,QAAI;AACA,YAAMG,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAA3C,EAA6DN,MAA7D,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEb,mBADD;AAELc,QAAAA,OAAO,EAAEN,GAAG,CAACO;AAFR,OAAD,CAAR;AAIJ,KANA,CAMC,OAAOC,GAAP,EAAY;AACVb,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEZ;AADD,OAAD,CAAR;AAGH;AACH,GAnBD,MAmBM;AACFE,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH;AAGJ,CA3BM;AA6BP,OAAO,MAAMgB,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMhB,QAAN,IAAkB;AACxD,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ;AADG,GAAf;AAKA,QAAMa,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACJ,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMX,GAAG,GAAG,MAAMX,KAAK,CAAC0B,IAAN,CAAY,GAAEb,OAAO,CAACC,GAAR,CAAYC,iBAAkB,mBAA5C,EAAgEQ,IAAhE,EAAsEd,MAAtE,CAAlB;AACCH,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAEN,GAAG,CAACO;AAFR,KAAD,CAAR;AAIAZ,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACJ,GAPD,CAOE,OAAOc,GAAP,EAAY;AACVb,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH;AACJ,CApBM","sourcesContent":["import axios from 'axios';\n\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')){\n        const config = {\n            headers:{\n                'Content-Type': 'application/json',\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n    \n        }};\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data \n            })\n       } catch (err) {\n           dispatch({\n               type: USER_LOADED_FAIL,\n           });\n       }\n    }else {\n        dispatch({\n            type: USER_LOADED_FAIL,\n        })\n    }\n    \n\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers:{\n            'Content-Type': 'application/json'\n\n    }};\n    const body = JSON.stringify({email, password});\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n         dispatch({\n             type: LOGIN_SUCCESS,\n             payload: res.data \n         });\n         dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL,\n        })\n    }\n};"]},"metadata":{},"sourceType":"module"}