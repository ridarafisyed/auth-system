{"ast":null,"code":"import _regeneratorRuntime from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{LOGIN_SUCCESS,LOGIN_FAIL,USER_LOADED_SUCCESS,USER_LOADED_FAIL,AUTHENTICATED_SUCCESS,AUTHENTICATED_FAIL,PASSWORD_RESET_SUCCESS,PASSWORD_RESET_FAIL,PASSWORD_RESET_CONFIRM_SUCCESS,PASSWORD_RESET_CONFIRM_FAIL,LOGOUT}from'./types';export var checkAuthenticated=function checkAuthenticated(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!localStorage.getItem('access')){_context.next=15;break;}config={headers:{'Content-Type':'application/json','Accept':'application/json'}};body=JSON.stringify({token:localStorage.getItem('access')});_context.prev=3;_context.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/verify/\"),body,config);case 6:res=_context.sent;if(res.data.code!=='token_not_valid'){dispatch({type:AUTHENTICATED_SUCCESS});}else{dispatch({type:AUTHENTICATED_FAIL});}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);dispatch({type:AUTHENTICATED_FAIL});case 13:_context.next=16;break;case 15:dispatch({type:AUTHENTICATED_FAIL});case 16:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// if login success then load user function \nexport var load_user=function load_user(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!localStorage.getItem('access')){_context2.next=14;break;}config={headers:{'Content-Type':'application/json','Authorization':\"JWT \".concat(localStorage.getItem('access')),'Accept':'application/json'}};_context2.prev=2;_context2.next=5;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/me/\"),config);case 5:res=_context2.sent;dispatch({type:USER_LOADED_SUCCESS,payload:res.data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:USER_LOADED_FAIL});case 12:_context2.next=15;break;case 14:dispatch({type:USER_LOADED_FAIL});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// login functions\nexport var login=function login(email,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({email:email,password:password});_context3.prev=2;_context3.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/create/\"),body,config);case 5:res=_context3.sent;dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(load_user());_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](2);dispatch({type:LOGIN_FAIL});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[2,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// logout\nexport var logout=function logout(){return function(dispatch){dispatch({type:LOGOUT});};};export var reset_password=function reset_password(email){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({email:email});_context4.prev=2;_context4.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/reset_password/\"),body,config);case 5:res=_context4.sent;dispatch({type:PASSWORD_RESET_SUCCESS});_context4.next=12;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](2);dispatch({type:PASSWORD_RESET_FAIL});case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[2,9]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var reset_password_confirm=function reset_password_confirm(uid,token,new_password,re_new_password){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({uid:uid,token:token,new_password:new_password,re_new_password:re_new_password});_context5.prev=2;_context5.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/reset_password_confirm/\"),body,config);case 5:res=_context5.sent;dispatch({type:PASSWORD_RESET_CONFIRM_SUCCESS});_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](2);dispatch({type:PASSWORD_RESET_CONFIRM_FAIL});case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[2,9]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","checkAuthenticated","dispatch","localStorage","getItem","config","headers","body","JSON","stringify","token","post","process","env","REACT_APP_API_URL","res","data","code","type","load_user","get","payload","login","email","password","logout","reset_password","reset_password_confirm","uid","new_password","re_new_password"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    LOGOUT\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }; \n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({  \n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\n// if login success then load user function \nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n// login functions\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n// logout\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};\n\nexport const reset_password = (email) => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ email });\n\n    try{\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config); \n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        })\n    }catch(err){\n        dispatch({\n            type: PASSWORD_RESET_FAIL   \n        })\n\n    }\n}\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try{\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config); \n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        })\n    }catch(err){\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL   \n        })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}