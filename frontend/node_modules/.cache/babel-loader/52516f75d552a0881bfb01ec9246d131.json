{"ast":null,"code":"import _slicedToArray from \"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"onEnter\", \"onExited\"],\n    _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport ClickAwayListener from '@mui/core/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      anchorOrigin = ownerState.anchorOrigin;\n  var slots = {\n    root: ['root', \"anchorOrigin\".concat(capitalize(anchorOrigin.vertical)).concat(capitalize(anchorOrigin.horizontal))]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nvar SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[\"anchorOrigin\".concat(capitalize(ownerState.anchorOrigin.vertical)).concat(capitalize(ownerState.anchorOrigin.horizontal))]];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n\n  var center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 24\n  } : {\n    bottom: 24\n  }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n    left: 24,\n    right: 'auto'\n  }, ownerState.isRtl && {\n    right: 24,\n    left: 'auto'\n  }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n    right: 24,\n    left: 'auto'\n  }, ownerState.isRtl && {\n    left: 24,\n    right: 'auto'\n  }))));\n});\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin;\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEnter = _props$TransitionProp.onEnter,\n      onExited = _props$TransitionProp.onExited,\n      TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n      other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var theme = useTheme();\n  var isRtl = theme.direction === 'rtl';\n\n  var ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical: vertical,\n      horizontal: horizontal\n    },\n    isRtl: isRtl\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited(node) {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(function () {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: function key() {\n    return null;\n  },\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any>} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/node_modules/@mui/material/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","unstable_composeClasses","composeClasses","ClickAwayListener","styled","useTheme","useThemeProps","duration","useEventCallback","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","isRtl","left","right","transform","zIndex","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","onEnter","onExited","other","direction","timerAutoHide","useRef","useState","exited","setExited","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","onClickAway","appear","in","timeout","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","func","sx","oneOfType","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport ClickAwayListener from '@mui/core/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/createTransitions';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }, ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }))\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    isRtl\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any>} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}