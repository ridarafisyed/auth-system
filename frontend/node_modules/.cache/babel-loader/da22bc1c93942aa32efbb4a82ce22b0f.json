{"ast":null,"code":"import _objectSpread from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SIGNUP_SUCCESS,SIGNUP_FAIL,LOGIN_SUCCESS,LOGIN_FAIL,USER_LOADED_SUCCESS,USER_LOADED_FAIL,AUTHENTICATED_SUCCESS,AUTHENTICATED_FAIL,PASSWORD_RESET_SUCCESS,PASSWORD_RESET_FAIL,PASSWORD_RESET_CONFIRM_SUCCESS,PASSWORD_RESET_CONFIRM_FAIL,LOGOUT,ACTIVATION_SUCCESS,ACTIVATION_FAIL}from'../actions/types';var initialState={access:localStorage.getItem('access'),refresh:localStorage.getItem('refresh'),isAuthenticated:null,user:null};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case AUTHENTICATED_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true});case AUTHENTICATED_FAIL:return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false});case SIGNUP_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false});case LOGIN_SUCCESS:localStorage.setItem('access',payload.access);return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,access:payload.access,refresh:payload.refresh});case SIGNUP_FAIL:case LOGIN_FAIL:case LOGOUT:localStorage.removeItem('access');localStorage.removeItem('remove');return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,access:null,refresh:null,user:null});case USER_LOADED_SUCCESS:return _objectSpread(_objectSpread({},state),{},{user:payload});case USER_LOADED_FAIL:return _objectSpread(_objectSpread({},state),{},{user:null});case PASSWORD_RESET_SUCCESS:case PASSWORD_RESET_FAIL:case PASSWORD_RESET_CONFIRM_SUCCESS:case PASSWORD_RESET_CONFIRM_FAIL:case ACTIVATION_SUCCESS:case ACTIVATION_FAIL:return _objectSpread({},state);default:return state;}}","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/reducers/auth.js"],"names":["SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","ACTIVATION_SUCCESS","ACTIVATION_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","state","action","type","payload","setItem","removeItem"],"mappings":"wKAAA,OACIA,cADJ,CAEIC,WAFJ,CAGIC,aAHJ,CAIIC,UAJJ,CAKIC,mBALJ,CAMIC,gBANJ,CAOIC,qBAPJ,CAQIC,kBARJ,CASIC,sBATJ,CAUIC,mBAVJ,CAWIC,8BAXJ,CAYIC,2BAZJ,CAaIC,MAbJ,CAcIC,kBAdJ,CAeIC,eAfJ,KAgBO,kBAhBP,CAkBA,GAAMC,CAAAA,YAAY,CAAE,CAChBC,MAAM,CAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADQ,CAEhBC,OAAO,CAAEF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFO,CAGhBE,eAAe,CAAE,IAHD,CAIhBC,IAAI,CAAE,IAJU,CAApB,CAOA,cAAe,WAAuC,IAA9BC,CAAAA,KAA8B,2DAAtBP,YAAsB,IAARQ,CAAAA,MAAQ,8CAC3CC,CAAAA,IAD2C,CAC1BD,MAD0B,CAC3CC,IAD2C,CACrCC,OADqC,CAC1BF,MAD0B,CACrCE,OADqC,CAGlD,OAAOD,IAAP,EACI,IAAKlB,CAAAA,qBAAL,CACI,sCACOgB,KADP,MAEIF,eAAe,CAAE,IAFrB,GAIJ,IAAKb,CAAAA,kBAAL,CACI,sCACOe,KADP,MAEIF,eAAe,CAAC,KAFpB,GAIJ,IAAKpB,CAAAA,cAAL,CACI,sCACOsB,KADP,MAEIF,eAAe,CAAE,KAFrB,GAKJ,IAAKlB,CAAAA,aAAL,CACIe,YAAY,CAACS,OAAb,CAAqB,QAArB,CAA+BD,OAAO,CAACT,MAAvC,EACA,sCACOM,KADP,MAEIF,eAAe,CAAE,IAFrB,CAGIJ,MAAM,CAAES,OAAO,CAACT,MAHpB,CAIIG,OAAO,CAAEM,OAAO,CAACN,OAJrB,GAMJ,IAAKlB,CAAAA,WAAL,CACA,IAAKE,CAAAA,UAAL,CACA,IAAKS,CAAAA,MAAL,CACIK,YAAY,CAACU,UAAb,CAAwB,QAAxB,EACAV,YAAY,CAACU,UAAb,CAAwB,QAAxB,EACA,sCACOL,KADP,MAEIF,eAAe,CAAE,KAFrB,CAGIJ,MAAM,CAAE,IAHZ,CAIIG,OAAO,CAAE,IAJb,CAKIE,IAAI,CAAC,IALT,GAOJ,IAAKjB,CAAAA,mBAAL,CACI,sCACOkB,KADP,MAEID,IAAI,CAAEI,OAFV,GAIJ,IAAKpB,CAAAA,gBAAL,CACI,sCACOiB,KADP,MAEID,IAAI,CAAE,IAFV,GAIJ,IAAKb,CAAAA,sBAAL,CACA,IAAKC,CAAAA,mBAAL,CACA,IAAKC,CAAAA,8BAAL,CACA,IAAKC,CAAAA,2BAAL,CACA,IAAKE,CAAAA,kBAAL,CACA,IAAKC,CAAAA,eAAL,CACI,wBACOQ,KADP,EAGJ,QACI,MAAOA,CAAAA,KAAP,CAzDR,CA6DH","sourcesContent":["import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    LOGOUT,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL\n} from '../actions/types';\n\nconst initialState ={\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n}\n\nexport default function(state = initialState, action ){\n    const {type, payload} = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true   \n            }\n        case AUTHENTICATED_FAIL:\n            return{\n                ...state,\n                isAuthenticated:false\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        \n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state, \n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('remove');\n            return {\n                ...state, \n                isAuthenticated: false,\n                access: null,\n                refresh: null,\n                user:null, \n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return{\n                ...state\n            }\n        default: \n            return state; \n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}