{"ast":null,"code":"import _defineProperty from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';// react router dom imports \nimport{Link,Redirect}from'react-router-dom';// redux imports \nimport{connect}from'react-redux';// login function \nimport{reset_password_confirm}from'../actions/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResetPasswordConfirm=function ResetPasswordConfirm(_ref){var match=_ref.match,reset_password_confirm=_ref.reset_password_confirm;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestSent=_useState2[0],setRequestSent=_useState2[1];var _useState3=useState({new_password:'',re_new_password:''}),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var new_password=formData.new_password,re_new_password=formData.re_new_password;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=function onSubmit(e){e.preventDefault();var uid=match.params.uid;var token=match.params.token;reset_password_confirm(uid,token,new_password,re_new_password);setRequestSent(true);};if(requestSent){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign In\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){return _onSubmit(e);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-3\",type:\"password\",placeholder:\"New Password\",name:\"password\",value:new_password,onChange:function onChange(e){return _onChange(e);},minLength:\"6\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-3\",type:\"password\",placeholder:\"Confirm New Password\",name:\"re_new_password\",value:re_new_password,onChange:function onChange(e){return _onChange(e);},minLength:\"6\",required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-3\",type:\"submit\",children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\"Don't have an Account \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Sign Up \"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\"Forgot your Password?  \",/*#__PURE__*/_jsx(Link,{to:\"/reset-password\",children:\"Reset Password \"})]})]})})]});};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{reset_password_confirm:reset_password_confirm})(ResetPasswordConfirm);","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/containers/ResetPasswordConfirmed.js"],"names":["React","useState","Link","Redirect","connect","reset_password_confirm","ResetPasswordConfirm","match","requestSent","setRequestSent","new_password","re_new_password","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","uid","params","token","mapStateToProps","state","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// react router dom imports \nimport {Link, Redirect} from 'react-router-dom'\n\n// redux imports \nimport {connect} from 'react-redux'\n\n// login function \nimport {reset_password_confirm} from '../actions/auth'\n\n\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\n    const [requestSent, setRequestSent] = useState(false); \n    const [formData, setFormData] = useState({\n        new_password : '',\n        re_new_password :'' \n    })\n    const {new_password, re_new_password} = formData\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n        \n       \n    }\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n   \n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                <input \n                    className='form-control mt-3'\n                    type = 'password'\n                    placeholder='New Password'\n                    name = 'password'\n                    value = {new_password}\n                    onChange={e => onChange(e)}\n                    minLength='6'\n                    required \n                    />\n                    <input \n                    className='form-control mt-3'\n                    type = 'password'\n                    placeholder='Confirm New Password'\n                    name = 're_new_password'\n                    value = {re_new_password}\n                    onChange={e => onChange(e)}\n                    minLength='6'\n                    required \n                    />\n                    <button className='btn btn-primary mt-3' type='submit'>\n                        Sign In\n                    </button>\n                    <p className='mt-3'>\n                        Don't have an Account <Link to='/signup'>Sign Up </Link>\n                    </p>\n                    <p className= 'mt-3'>\n                        Forgot your Password?  <Link to='/reset-password'>Reset Password </Link>\n                    </p>\n\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { reset_password_confirm })(ResetPasswordConfirm);"]},"metadata":{},"sourceType":"module"}