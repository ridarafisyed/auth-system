{"ast":null,"code":"import _regeneratorRuntime from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/supersis03/Projects/dextera-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{LOGIN_SUCCESS,LOGIN_FAIL,USER_LOADED_SUCCESS,USER_LOADED_FAIL,AUTHENTICATED_SUCCESS,AUTHENTICATED_FAIL,LOGOUT}from'./types';export var checkAuthenticated=function checkAuthenticated(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!localStorage.getItem('access')){_context.next=15;break;}config={headers:{'Content-Type':'application/json','Accept':'application/json'}};body=JSON.stringify({token:localStorage.getItem('access')});_context.prev=3;_context.next=6;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/verify/\"),body,config);case 6:res=_context.sent;if(res.data.code!==\"token_not_valid\"){}else{dispatch({type:AUTHENTICATED_FAIL});}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);dispatch({type:AUTHENTICATED_FAIL});case 13:_context.next=16;break;case 15:dispatch({type:AUTHENTICATED_FAIL});case 16:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var logout=function logout(){return function(dispatch){dispatch({type:LOGOUT});};};export var load_user=function load_user(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!localStorage.getItem('access')){_context2.next=14;break;}config={headers:{'Content-Type':'application/json','Authorization':\"JWT \".concat(localStorage.getItem('access')),'Accept':'application/json'}};_context2.prev=2;_context2.next=5;return axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/me/\"),config);case 5:res=_context2.sent;dispatch({type:USER_LOADED_SUCCESS,payload:res.data});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);dispatch({type:USER_LOADED_FAIL});case 12:_context2.next=15;break;case 14:dispatch({type:USER_LOADED_FAIL});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var login=function login(email,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,body,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};body=JSON.stringify({email:email,password:password});_context3.prev=2;_context3.next=5;return axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/create/\"),body,config);case 5:res=_context3.sent;dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(load_user());_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](2);dispatch({type:LOGIN_FAIL});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[2,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/actions/auth.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","checkAuthenticated","dispatch","localStorage","getItem","config","headers","body","JSON","stringify","token","post","process","env","REACT_APP_API_URL","res","data","code","type","logout","load_user","get","payload","login","email","password"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    LOGOUT\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch =>{\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }; \n        const body = JSON.stringify({token: localStorage.getItem('access')});\n        try{\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n            if(res.data.code !== \"token_not_valid\"){\n\n            }\n            else{\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                })\n            }\n\n        }catch(err){\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            })\n        }\n\n        \n    }else{\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        })\n    }\n\n}\nexport const logout =() => dispatch =>{\n    dispatch ({\n        type : LOGOUT\n    });\n}\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers:{\n            'Content-Type': 'application/json'\n\n    }};\n    const body = JSON.stringify({email, password});\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n         dispatch({\n             type: LOGIN_SUCCESS,\n             payload: res.data \n         });\n         dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL,\n        })\n    }\n};"]},"metadata":{},"sourceType":"module"}