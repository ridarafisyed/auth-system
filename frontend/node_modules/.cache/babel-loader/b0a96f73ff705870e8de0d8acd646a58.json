{"ast":null,"code":"import { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, PASSWORD_RESET_SUCCESS, PASSWORD_RESET_FAIL, PASSWORD_RESET_CONFIRM_SUCCESS, PASSWORD_RESET_CONFIRM_FAIL, LOGOUT } from '../actions/types';\nconst initialState = {\n  access: localStorage.getItem('access'),\n  refresh: localStorage.getItem('refresh'),\n  isAuthenticated: null,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return { ...state,\n        isAuthenticated: true\n      };\n\n    case AUTHENTICATED_FAIL:\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    case SIGNUP_SUCCESS:\n      return { ...state,\n        isAuthenticated: false\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('access', payload.access);\n      return { ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh\n      };\n\n    case SIGNUP_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('access');\n      localStorage.removeItem('remove');\n      return { ...state,\n        isAuthenticated: false,\n        access: null,\n        refresh: null,\n        user: null\n      };\n\n    case USER_LOADED_SUCCESS:\n      return { ...state,\n        user: payload\n      };\n\n    case USER_LOADED_FAIL:\n      return { ...state,\n        user: null\n      };\n\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/supersis03/Projects/dextera-project/frontend/src/reducers/auth.js"],"names":["SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SACIA,cADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,mBALJ,EAMIC,gBANJ,EAOIC,qBAPJ,EAQIC,kBARJ,EASIC,sBATJ,EAUIC,mBAVJ,EAWIC,8BAXJ,EAYIC,2BAZJ,EAaIC,MAbJ,QAcO,kBAdP;AAgBA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADQ;AAEhBC,EAAAA,OAAO,EAAEF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFO;AAGhBE,EAAAA,eAAe,EAAE,IAHD;AAIhBC,EAAAA,IAAI,EAAE;AAJU,CAApB;AAOA,eAAe,UAASC,KAAK,GAAGP,YAAjB,EAA+BQ,MAA/B,EAAuC;AAClD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;;AAEA,UAAOC,IAAP;AACI,SAAKhB,qBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHF,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAIJ,SAAKX,kBAAL;AACI,aAAM,EACF,GAAGa,KADD;AAEFF,QAAAA,eAAe,EAAC;AAFd,OAAN;;AAIJ,SAAKlB,cAAL;AACI,aAAO,EACH,GAAGoB,KADA;AAEHF,QAAAA,eAAe,EAAE;AAFd,OAAP;;AAKJ,SAAKhB,aAAL;AACIa,MAAAA,YAAY,CAACS,OAAb,CAAqB,QAArB,EAA+BD,OAAO,CAACT,MAAvC;AACA,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,eAAe,EAAE,IAFd;AAGHJ,QAAAA,MAAM,EAAES,OAAO,CAACT,MAHb;AAIHG,QAAAA,OAAO,EAAEM,OAAO,CAACN;AAJd,OAAP;;AAMJ,SAAKhB,WAAL;AACA,SAAKE,UAAL;AACA,SAAKS,MAAL;AACIG,MAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB;AACAV,MAAAA,YAAY,CAACU,UAAb,CAAwB,QAAxB;AACA,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,eAAe,EAAE,KAFd;AAGHJ,QAAAA,MAAM,EAAE,IAHL;AAIHG,QAAAA,OAAO,EAAE,IAJN;AAKHE,QAAAA,IAAI,EAAC;AALF,OAAP;;AAOJ,SAAKf,mBAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHD,QAAAA,IAAI,EAAEI;AAFH,OAAP;;AAIJ,SAAKlB,gBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHD,QAAAA,IAAI,EAAE;AAFH,OAAP;;AAIJ,SAAMX,sBAAN;AACA,SAAKC,mBAAL;AACA,SAAKC,8BAAL;AACA,SAAKC,2BAAL;AACI,aAAM,EACF,GAAGS;AADD,OAAN;;AAGJ;AACI,aAAOA,KAAP;AAvDR;AA2DH","sourcesContent":["import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState ={\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n}\n\nexport default function(state = initialState, action ){\n    const {type, payload} = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true   \n            }\n        case AUTHENTICATED_FAIL:\n            return{\n                ...state,\n                isAuthenticated:false\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        \n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state, \n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh\n            }\n        case SIGNUP_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('remove');\n            return {\n                ...state, \n                isAuthenticated: false,\n                access: null,\n                refresh: null,\n                user:null, \n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case  PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n            return{\n                ...state\n            }\n        default: \n            return state; \n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}